name: build

on: [ push, pull_request ]

jobs:
  game:
    runs-on: ubuntu-latest
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2
    - name: Gradle Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Setup JDK
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 8
    - name: Build Game
      run: cd game && ./gradlew --no-daemon setupCIWorkspace && ./gradlew --no-daemon build && cd ..
    - name: Upload Artifact
      uses: actions/upload-artifact@v2-preview
      with:
        name: Game
        path: game/build/libs/game.jar
    
  launcher:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    needs: game

    steps:
    - name: Git Checkout
      uses: actions/checkout@v2
    - name: Set Up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
        cache: "npm"
    - name: NPM CI
      run: npm ci
    - name: Download Game
      uses: actions/download-artifact@v2
      with:
        name: Game
    - name: Remove Unnecessary Files
      run: rm -r game
    - name: Relocate Game
      run: mkdir -p game/build/libs && mv game.jar game/build/libs 
    - name: Build Installer
      run: npm run make
    - name: Upload Artifact (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2-preview
      with:
        name: Sol-Client-Launcher-Linux
        path: |
          out/make/deb/x64/*.deb
          out/make/*.AppImage
    - name: Upload Artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v2-preview
      with:
        name: Sol-Client-Launcher-Windows
        path: out/make/squirrel.windows/x64/*.exe
    - name: Upload Artifact (MacOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v2-preview
      with:
        name: Sol-Client-Launcher-MacOS
        path: out/make/*.dmg

  upload:
    if: "github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, '[create release] ')"

    runs-on: ubuntu-latest
  
    needs: launcher
    
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2

    - name: Download Artifacts
      uses: actions/download-artifact@v2

    # https://stackoverflow.com/a/61919791
    - name: Retrieve Version
      run: |
          content=`cat ./package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=packageJson::$content"
      id: version

    - name: Create a Release
      uses: marvinpinto/action-automatic-releases@latest
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ fromJson(steps.version.outputs.packageJson).version }}
        prerelease: false
        title: ${{ fromJson(steps.version.outputs.packageJson).version }}
        files: |
          Sol-Client-Launcher-Linux/deb/x64/*.deb
          Sol-Client-Launcher-Linux/*.AppImage
          Sol-Client-Launcher-Windows/*.exe
          Sol-Client-Launcher-MacOS/*.dmg
          Game/game.jar
